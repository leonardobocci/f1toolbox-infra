#https://github.com/dagster-io/dagster/blob/master/helm/dagster/values.yaml
dagsterWebserver:
  readinessProbe:
    periodSeconds: 60
    timeoutSeconds: 50
dagsterDaemon:
  runCoordinator:
    enabled: true
    type: QueuedRunCoordinator
    config:
      queuedRunCoordinator:
        maxConcurrentRuns: 10
        blockOpConcurrencyLimitedRuns:
          enabled: true
          opConcurrencySlotBuffer: 0
  runMonitoring:
    enabled: true
    maxResumeRunAttempts: 4
  # Max number of times to attempt to resume a run with a new run worker instead
  # of failing the run if the run worker has crashed. Only works for runs using the
  # `k8s_job_executor` to run each op in its own Kubernetes job.
  runRetries:
    enabled: true
    maxRetries: 2
retention:
  enabled: true
  schedule:
    purgeAfterDays: -1
  sensor:
    purgeAfterDays:
      failure: 30
      skipped: 3
      started: -1
      success: -1
  autoMaterialize:
    purgeAfterDays:
      failure: 30
      skipped: 3
      started: -1
      success: -1
runLauncher:
  type: K8sRunLauncher
  config:
    k8sRunLauncher:
      jobNamespace: "f1toolbox-core"
      runK8sConfig:
        containerConfig:
          resources:
            limits:
              cpu: 4000m #4 cores
              memory: 40960Mi #40GB
            requests:
              cpu: 500m #0.5 core
              memory: 2048Mi #2GB
        podTemplateSpecMetadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
dagster-user-deployments:
  enabled: true
  deployments:
  - name: "f1toolbox-core"
    image:
      repository: "leobocci/f1toolbox-dagster"
      tag: latest
      pullPolicy: Always
    dagsterApiGrpcArgs:
    - "-f"
    - "/app/src/dagster/definitions.py"
    port: 3030
  serviceAccount:
    create: false
    name: dagster-ksa
    namespace: f1toolbox-core
